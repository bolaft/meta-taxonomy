[{"attributes": ["S.provides(p)", "!A.believes(p)", "S.wants(A.believes(p))", "S.wants(p)", "p.isPropositional", "p.isInformation"], "set_name": "FORWARD_LOOKING", "name": "assert"}, {"attributes": ["S.provides(p)", "p.isPropositional", "p.isInformation", "p.inHistory"], "set_name": "FORWARD_LOOKING", "name": "reassert"}, {"attributes": ["S.provides(p)", "p.isPropositional", "p.isInformation"], "set_name": "FORWARD_LOOKING", "name": "other statement"}, {"attributes": ["S.wants(p)"], "set_name": "FORWARD_LOOKING", "name": "info-request"}, {"attributes": ["S.wants(A.performs(a))", "S.wants(p)"], "set_name": "FORWARD_LOOKING", "name": "action-directive"}, {"attributes": ["S.options(A.performs(a))", "S.options(p)"], "set_name": "FORWARD_LOOKING", "name": "open-option"}, {"attributes": ["S.commits(S.performs(a))", "S.commits(p)", "!S.conditions(A.wants(S.performs(a)))", "!S.conditions(p)"], "set_name": "FORWARD_LOOKING", "name": "offer"}, {"attributes": ["S.commits(S.performs(a))", "S.commits(p)", "S.conditions(A.wants(S.performs(a)))", "S.conditions(p)"], "set_name": "FORWARD_LOOKING", "name": "commit"}, {"attributes": ["S.wants(d) || S.wants(!d)", "S.wants(p)"], "set_name": "FORWARD_LOOKING", "name": "conventional opening closing"}, {"attributes": ["S.performs(p)"], "set_name": "FORWARD_LOOKING", "name": "explicit-performative"}, {"attributes": ["S.performs(p)", "p.isExclamation"], "set_name": "FORWARD_LOOKING", "name": "exclamation"}, {"attributes": ["A.provides(p)", "S.provides(p)", "p.isPositive", "!p.isPartial"], "set_name": "BACKWARD_LOOKING", "name": "accept"}, {"attributes": ["A.provides(p)", "S.provides(p)", "p.isPositive", "p.isPartial"], "set_name": "BACKWARD_LOOKING", "name": "accept-part"}, {"attributes": ["A.provides(p)", "S.provides(p)", "p.isIndecisive"], "set_name": "BACKWARD_LOOKING", "name": "maybe"}, {"attributes": ["S.provides(p)", "!p.isPositive", "p.isPartial"], "set_name": "BACKWARD_LOOKING", "name": "reject-part"}, {"attributes": ["A.provides(p)", "S.provides(p)", "!p.isPositive", "!p.isPartial"], "set_name": "BACKWARD_LOOKING", "name": "reject"}, {"attributes": ["A.wants(p)", "S.holds(p)"], "set_name": "BACKWARD_LOOKING", "name": "hold"}, {"attributes": [], "set_name": "BACKWARD_LOOKING", "name": "signal-non-understanding"}, {"attributes": ["!f.isPositive"], "set_name": "BACKWARD_LOOKING", "name": "S.provides(f)"}, {"attributes": ["S.provides(f)", "f.isPositive", "!f.isEcho"], "set_name": "BACKWARD_LOOKING", "name": "acknowledge"}, {"attributes": ["S.provides(f)", "f.isPositive", "f.isEcho"], "set_name": "BACKWARD_LOOKING", "name": "repeat-rephrase"}, {"attributes": ["S.complete(A)", "S.provides(f)", "f.isPositive"], "set_name": "BACKWARD_LOOKING", "name": "completion"}, {"attributes": ["S.corrects(A)", "S.provides(f)", "f.isPositive"], "set_name": "BACKWARD_LOOKING", "name": "correct-misspeaking"}]