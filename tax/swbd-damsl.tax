%FORWARD_LOOKING

# forward looking functions

sd
S.provides(p)
p.isPropositional
p.isInformation

sv
S.provides(p)
p.isPropositional
p.isOpinion

qy
S.wants(p)
p.isPropositional
p.hasSubjectInversion
p.isInformation

qw
S.wants(p)
p.hasSubjectInversion
p.isInformation

qw^d
S.wants(p)
p.hasSubjectInversion
p.isEcho
p.isInformation

qo
S.wants(p)
p.isOpen
p.isInformation

qr
S.wants(p)
p.inSet
p.isInformation

qrr
S.wants(p)
p.inSet
p.isPropositional
p.isInformation

^d
S.wants(p)
!p.hasSubjectInversion
p.isInformation

^g
S.wants(p)
p.isInformation
p.isTagQuestion

ad
S.wants(A.performs(a))

oo
S.options(A.performs(a))

co
S.commits(S.performs(a))
!S.conditions(A.wants(S.performs(a)))

cc
S.commits(S.performs(a))
S.conditions(A.wants(S.performs(a)))

fp
S.wants(d)

fc
S.wants(!d)

fx
S.performs(p)

fe
S.performs(p)
p.isExclamation

fo
!A.wants(p)

ft
S.performs(p)
p.isThanks

fw
A.performs(p)
p.isThanks
S.provides(f)

fa
S.performs(p)
p.isRegret

%BACKWARD_LOOKING

# backward looking functions

aa
A.provides(p)
S.provides(p)
p.isPositive
!p.isPartial

aap
A.provides(p)
S.provides(p)
p.isPositive
p.isPartial

am
A.provides(p)
S.provides(p)
p.isIndecisive

arp
S.provides(p)
!p.isPositive
p.isPartial

ar
A.provides(p)
S.provides(p)
!p.isPositive
!p.isPartial

br
S.provides(f)
!f.isPositive

br^m
S.provides(f)
!f.isPositive
p.isEcho

b
S.provides(f)
f.isPositive
!f.isEcho

bh
S.provides(f)
f.isPositive
p.hasSubjectInversion

bk
S.provides(f)
f.isPositive

b^m
S.provides(f)
f.isPositive
f.isEcho

bf
S.provides(f)
f.isPositive
f.isSummarize

^2
S.complete(A)
S.provides(f)
f.isPositive

ba
S.provides(f)
f.isPositive
f.isSupportive

by
S.provides(f)
f.isPositive
S.performs(p)
p.isApology

bd
A.performs(p)
p.isApology
S.provides(f)

bc
S.corrects(A)
S.provides(f)
f.isPositive

answer
A.wants(p)
S.provides(p)
p.isInformation

ny
A.wants(p)
S.provides(p)
p.isYesNo
p.isPositive

nn
A.wants(p)
S.provides(p)
p.isYesNo
!p.isPositive

na
A.wants(p)
S.provides(p)
!p.isYesNo
p.isPositive

ng
A.wants(p)
S.provides(p)
!p.isYesNo
!p.isPositive

no
A.wants(p)
S.provides(p)
p.isIndecisive

^e
A.wants(p)
S.provides(p)
p.isPropositional
p.isInformation

nd
A.wants(p)
p.isTagQuestion
S.provides(p)
p.isInformation

^h
A.wants(p)
S.holds(p)

%OTHER

^q
S.provides(p)
p.hasQuote

h
S.provides(p)
p.isIndecisive